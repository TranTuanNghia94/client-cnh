/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as R404Import } from './routes/404'
import { Route as IndexImport } from './routes/index'
import { Route as AuthLoginImport } from './routes/_auth/login'

// Create Virtual Routes

const AppSettingLazyImport = createFileRoute('/_app/setting')()
const AppHomeLazyImport = createFileRoute('/_app/home')()
const AppContractLazyImport = createFileRoute('/_app/contract')()
const AppVendorIndexLazyImport = createFileRoute('/_app/vendor/')()
const AppUserIndexLazyImport = createFileRoute('/_app/user/')()
const AppTypeIndexLazyImport = createFileRoute('/_app/type/')()
const AppSellIndexLazyImport = createFileRoute('/_app/sell/')()
const AppPaymentIndexLazyImport = createFileRoute('/_app/payment/')()
const AppGoodsIndexLazyImport = createFileRoute('/_app/goods/')()
const AppCustomerIndexLazyImport = createFileRoute('/_app/customer/')()
const AppVendorNewLazyImport = createFileRoute('/_app/vendor/new')()
const AppVendorVendorIdLazyImport = createFileRoute('/_app/vendor/$vendorId')()
const AppUserNewLazyImport = createFileRoute('/_app/user/new')()
const AppTypeNewLazyImport = createFileRoute('/_app/type/new')()
const AppTypeTypeIdLazyImport = createFileRoute('/_app/type/$typeId')()
const AppSellNewLazyImport = createFileRoute('/_app/sell/new')()
const AppSellSellIdLazyImport = createFileRoute('/_app/sell/$sellId')()
const AppPaymentNewLazyImport = createFileRoute('/_app/payment/new')()
const AppGoodsNewLazyImport = createFileRoute('/_app/goods/new')()
const AppGoodsGoodsIdLazyImport = createFileRoute('/_app/goods/$goodsId')()
const AppCustomerNewLazyImport = createFileRoute('/_app/customer/new')()
const AppCustomerCustomerIdLazyImport = createFileRoute(
  '/_app/customer/$customerId',
)()

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppSettingLazyRoute = AppSettingLazyImport.update({
  path: '/setting',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/setting.lazy').then((d) => d.Route))

const AppHomeLazyRoute = AppHomeLazyImport.update({
  path: '/home',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/home.lazy').then((d) => d.Route))

const AppContractLazyRoute = AppContractLazyImport.update({
  path: '/contract',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/contract.lazy').then((d) => d.Route))

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppVendorIndexLazyRoute = AppVendorIndexLazyImport.update({
  path: '/vendor/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/vendor/index.lazy').then((d) => d.Route),
)

const AppUserIndexLazyRoute = AppUserIndexLazyImport.update({
  path: '/user/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/user/index.lazy').then((d) => d.Route),
)

const AppTypeIndexLazyRoute = AppTypeIndexLazyImport.update({
  path: '/type/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/type/index.lazy').then((d) => d.Route),
)

const AppSellIndexLazyRoute = AppSellIndexLazyImport.update({
  path: '/sell/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/sell/index.lazy').then((d) => d.Route),
)

const AppPaymentIndexLazyRoute = AppPaymentIndexLazyImport.update({
  path: '/payment/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/payment/index.lazy').then((d) => d.Route),
)

const AppGoodsIndexLazyRoute = AppGoodsIndexLazyImport.update({
  path: '/goods/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/goods/index.lazy').then((d) => d.Route),
)

const AppCustomerIndexLazyRoute = AppCustomerIndexLazyImport.update({
  path: '/customer/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/customer/index.lazy').then((d) => d.Route),
)

const AppVendorNewLazyRoute = AppVendorNewLazyImport.update({
  path: '/vendor/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/vendor/new.lazy').then((d) => d.Route),
)

const AppVendorVendorIdLazyRoute = AppVendorVendorIdLazyImport.update({
  path: '/vendor/$vendorId',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/vendor/$vendorId.lazy').then((d) => d.Route),
)

const AppUserNewLazyRoute = AppUserNewLazyImport.update({
  path: '/user/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/user/new.lazy').then((d) => d.Route))

const AppTypeNewLazyRoute = AppTypeNewLazyImport.update({
  path: '/type/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/type/new.lazy').then((d) => d.Route))

const AppTypeTypeIdLazyRoute = AppTypeTypeIdLazyImport.update({
  path: '/type/$typeId',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/type/$typeId.lazy').then((d) => d.Route),
)

const AppSellNewLazyRoute = AppSellNewLazyImport.update({
  path: '/sell/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/sell/new.lazy').then((d) => d.Route))

const AppSellSellIdLazyRoute = AppSellSellIdLazyImport.update({
  path: '/sell/$sellId',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/sell/$sellId.lazy').then((d) => d.Route),
)

const AppPaymentNewLazyRoute = AppPaymentNewLazyImport.update({
  path: '/payment/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/payment/new.lazy').then((d) => d.Route),
)

const AppGoodsNewLazyRoute = AppGoodsNewLazyImport.update({
  path: '/goods/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/goods/new.lazy').then((d) => d.Route),
)

const AppGoodsGoodsIdLazyRoute = AppGoodsGoodsIdLazyImport.update({
  path: '/goods/$goodsId',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/goods/$goodsId.lazy').then((d) => d.Route),
)

const AppCustomerNewLazyRoute = AppCustomerNewLazyImport.update({
  path: '/customer/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/customer/new.lazy').then((d) => d.Route),
)

const AppCustomerCustomerIdLazyRoute = AppCustomerCustomerIdLazyImport.update({
  path: '/customer/$customerId',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/customer/$customerId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/contract': {
      id: '/_app/contract'
      path: '/contract'
      fullPath: '/contract'
      preLoaderRoute: typeof AppContractLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/home': {
      id: '/_app/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AppHomeLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/setting': {
      id: '/_app/setting'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof AppSettingLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/customer/$customerId': {
      id: '/_app/customer/$customerId'
      path: '/customer/$customerId'
      fullPath: '/customer/$customerId'
      preLoaderRoute: typeof AppCustomerCustomerIdLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/customer/new': {
      id: '/_app/customer/new'
      path: '/customer/new'
      fullPath: '/customer/new'
      preLoaderRoute: typeof AppCustomerNewLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/goods/$goodsId': {
      id: '/_app/goods/$goodsId'
      path: '/goods/$goodsId'
      fullPath: '/goods/$goodsId'
      preLoaderRoute: typeof AppGoodsGoodsIdLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/goods/new': {
      id: '/_app/goods/new'
      path: '/goods/new'
      fullPath: '/goods/new'
      preLoaderRoute: typeof AppGoodsNewLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/payment/new': {
      id: '/_app/payment/new'
      path: '/payment/new'
      fullPath: '/payment/new'
      preLoaderRoute: typeof AppPaymentNewLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/sell/$sellId': {
      id: '/_app/sell/$sellId'
      path: '/sell/$sellId'
      fullPath: '/sell/$sellId'
      preLoaderRoute: typeof AppSellSellIdLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/sell/new': {
      id: '/_app/sell/new'
      path: '/sell/new'
      fullPath: '/sell/new'
      preLoaderRoute: typeof AppSellNewLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/type/$typeId': {
      id: '/_app/type/$typeId'
      path: '/type/$typeId'
      fullPath: '/type/$typeId'
      preLoaderRoute: typeof AppTypeTypeIdLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/type/new': {
      id: '/_app/type/new'
      path: '/type/new'
      fullPath: '/type/new'
      preLoaderRoute: typeof AppTypeNewLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/user/new': {
      id: '/_app/user/new'
      path: '/user/new'
      fullPath: '/user/new'
      preLoaderRoute: typeof AppUserNewLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/vendor/$vendorId': {
      id: '/_app/vendor/$vendorId'
      path: '/vendor/$vendorId'
      fullPath: '/vendor/$vendorId'
      preLoaderRoute: typeof AppVendorVendorIdLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/vendor/new': {
      id: '/_app/vendor/new'
      path: '/vendor/new'
      fullPath: '/vendor/new'
      preLoaderRoute: typeof AppVendorNewLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/customer/': {
      id: '/_app/customer/'
      path: '/customer'
      fullPath: '/customer'
      preLoaderRoute: typeof AppCustomerIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/goods/': {
      id: '/_app/goods/'
      path: '/goods'
      fullPath: '/goods'
      preLoaderRoute: typeof AppGoodsIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/payment/': {
      id: '/_app/payment/'
      path: '/payment'
      fullPath: '/payment'
      preLoaderRoute: typeof AppPaymentIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/sell/': {
      id: '/_app/sell/'
      path: '/sell'
      fullPath: '/sell'
      preLoaderRoute: typeof AppSellIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/type/': {
      id: '/_app/type/'
      path: '/type'
      fullPath: '/type'
      preLoaderRoute: typeof AppTypeIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/user/': {
      id: '/_app/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof AppUserIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/vendor/': {
      id: '/_app/vendor/'
      path: '/vendor'
      fullPath: '/vendor'
      preLoaderRoute: typeof AppVendorIndexLazyImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppContractLazyRoute: typeof AppContractLazyRoute
  AppHomeLazyRoute: typeof AppHomeLazyRoute
  AppSettingLazyRoute: typeof AppSettingLazyRoute
  AppCustomerCustomerIdLazyRoute: typeof AppCustomerCustomerIdLazyRoute
  AppCustomerNewLazyRoute: typeof AppCustomerNewLazyRoute
  AppGoodsGoodsIdLazyRoute: typeof AppGoodsGoodsIdLazyRoute
  AppGoodsNewLazyRoute: typeof AppGoodsNewLazyRoute
  AppPaymentNewLazyRoute: typeof AppPaymentNewLazyRoute
  AppSellSellIdLazyRoute: typeof AppSellSellIdLazyRoute
  AppSellNewLazyRoute: typeof AppSellNewLazyRoute
  AppTypeTypeIdLazyRoute: typeof AppTypeTypeIdLazyRoute
  AppTypeNewLazyRoute: typeof AppTypeNewLazyRoute
  AppUserNewLazyRoute: typeof AppUserNewLazyRoute
  AppVendorVendorIdLazyRoute: typeof AppVendorVendorIdLazyRoute
  AppVendorNewLazyRoute: typeof AppVendorNewLazyRoute
  AppCustomerIndexLazyRoute: typeof AppCustomerIndexLazyRoute
  AppGoodsIndexLazyRoute: typeof AppGoodsIndexLazyRoute
  AppPaymentIndexLazyRoute: typeof AppPaymentIndexLazyRoute
  AppSellIndexLazyRoute: typeof AppSellIndexLazyRoute
  AppTypeIndexLazyRoute: typeof AppTypeIndexLazyRoute
  AppUserIndexLazyRoute: typeof AppUserIndexLazyRoute
  AppVendorIndexLazyRoute: typeof AppVendorIndexLazyRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppContractLazyRoute: AppContractLazyRoute,
  AppHomeLazyRoute: AppHomeLazyRoute,
  AppSettingLazyRoute: AppSettingLazyRoute,
  AppCustomerCustomerIdLazyRoute: AppCustomerCustomerIdLazyRoute,
  AppCustomerNewLazyRoute: AppCustomerNewLazyRoute,
  AppGoodsGoodsIdLazyRoute: AppGoodsGoodsIdLazyRoute,
  AppGoodsNewLazyRoute: AppGoodsNewLazyRoute,
  AppPaymentNewLazyRoute: AppPaymentNewLazyRoute,
  AppSellSellIdLazyRoute: AppSellSellIdLazyRoute,
  AppSellNewLazyRoute: AppSellNewLazyRoute,
  AppTypeTypeIdLazyRoute: AppTypeTypeIdLazyRoute,
  AppTypeNewLazyRoute: AppTypeNewLazyRoute,
  AppUserNewLazyRoute: AppUserNewLazyRoute,
  AppVendorVendorIdLazyRoute: AppVendorVendorIdLazyRoute,
  AppVendorNewLazyRoute: AppVendorNewLazyRoute,
  AppCustomerIndexLazyRoute: AppCustomerIndexLazyRoute,
  AppGoodsIndexLazyRoute: AppGoodsIndexLazyRoute,
  AppPaymentIndexLazyRoute: AppPaymentIndexLazyRoute,
  AppSellIndexLazyRoute: AppSellIndexLazyRoute,
  AppTypeIndexLazyRoute: AppTypeIndexLazyRoute,
  AppUserIndexLazyRoute: AppUserIndexLazyRoute,
  AppVendorIndexLazyRoute: AppVendorIndexLazyRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '': typeof AppRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/contract': typeof AppContractLazyRoute
  '/home': typeof AppHomeLazyRoute
  '/setting': typeof AppSettingLazyRoute
  '/customer/$customerId': typeof AppCustomerCustomerIdLazyRoute
  '/customer/new': typeof AppCustomerNewLazyRoute
  '/goods/$goodsId': typeof AppGoodsGoodsIdLazyRoute
  '/goods/new': typeof AppGoodsNewLazyRoute
  '/payment/new': typeof AppPaymentNewLazyRoute
  '/sell/$sellId': typeof AppSellSellIdLazyRoute
  '/sell/new': typeof AppSellNewLazyRoute
  '/type/$typeId': typeof AppTypeTypeIdLazyRoute
  '/type/new': typeof AppTypeNewLazyRoute
  '/user/new': typeof AppUserNewLazyRoute
  '/vendor/$vendorId': typeof AppVendorVendorIdLazyRoute
  '/vendor/new': typeof AppVendorNewLazyRoute
  '/customer': typeof AppCustomerIndexLazyRoute
  '/goods': typeof AppGoodsIndexLazyRoute
  '/payment': typeof AppPaymentIndexLazyRoute
  '/sell': typeof AppSellIndexLazyRoute
  '/type': typeof AppTypeIndexLazyRoute
  '/user': typeof AppUserIndexLazyRoute
  '/vendor': typeof AppVendorIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '': typeof AppRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/contract': typeof AppContractLazyRoute
  '/home': typeof AppHomeLazyRoute
  '/setting': typeof AppSettingLazyRoute
  '/customer/$customerId': typeof AppCustomerCustomerIdLazyRoute
  '/customer/new': typeof AppCustomerNewLazyRoute
  '/goods/$goodsId': typeof AppGoodsGoodsIdLazyRoute
  '/goods/new': typeof AppGoodsNewLazyRoute
  '/payment/new': typeof AppPaymentNewLazyRoute
  '/sell/$sellId': typeof AppSellSellIdLazyRoute
  '/sell/new': typeof AppSellNewLazyRoute
  '/type/$typeId': typeof AppTypeTypeIdLazyRoute
  '/type/new': typeof AppTypeNewLazyRoute
  '/user/new': typeof AppUserNewLazyRoute
  '/vendor/$vendorId': typeof AppVendorVendorIdLazyRoute
  '/vendor/new': typeof AppVendorNewLazyRoute
  '/customer': typeof AppCustomerIndexLazyRoute
  '/goods': typeof AppGoodsIndexLazyRoute
  '/payment': typeof AppPaymentIndexLazyRoute
  '/sell': typeof AppSellIndexLazyRoute
  '/type': typeof AppTypeIndexLazyRoute
  '/user': typeof AppUserIndexLazyRoute
  '/vendor': typeof AppVendorIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/_app': typeof AppRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_app/contract': typeof AppContractLazyRoute
  '/_app/home': typeof AppHomeLazyRoute
  '/_app/setting': typeof AppSettingLazyRoute
  '/_app/customer/$customerId': typeof AppCustomerCustomerIdLazyRoute
  '/_app/customer/new': typeof AppCustomerNewLazyRoute
  '/_app/goods/$goodsId': typeof AppGoodsGoodsIdLazyRoute
  '/_app/goods/new': typeof AppGoodsNewLazyRoute
  '/_app/payment/new': typeof AppPaymentNewLazyRoute
  '/_app/sell/$sellId': typeof AppSellSellIdLazyRoute
  '/_app/sell/new': typeof AppSellNewLazyRoute
  '/_app/type/$typeId': typeof AppTypeTypeIdLazyRoute
  '/_app/type/new': typeof AppTypeNewLazyRoute
  '/_app/user/new': typeof AppUserNewLazyRoute
  '/_app/vendor/$vendorId': typeof AppVendorVendorIdLazyRoute
  '/_app/vendor/new': typeof AppVendorNewLazyRoute
  '/_app/customer/': typeof AppCustomerIndexLazyRoute
  '/_app/goods/': typeof AppGoodsIndexLazyRoute
  '/_app/payment/': typeof AppPaymentIndexLazyRoute
  '/_app/sell/': typeof AppSellIndexLazyRoute
  '/_app/type/': typeof AppTypeIndexLazyRoute
  '/_app/user/': typeof AppUserIndexLazyRoute
  '/_app/vendor/': typeof AppVendorIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | ''
    | '/login'
    | '/contract'
    | '/home'
    | '/setting'
    | '/customer/$customerId'
    | '/customer/new'
    | '/goods/$goodsId'
    | '/goods/new'
    | '/payment/new'
    | '/sell/$sellId'
    | '/sell/new'
    | '/type/$typeId'
    | '/type/new'
    | '/user/new'
    | '/vendor/$vendorId'
    | '/vendor/new'
    | '/customer'
    | '/goods'
    | '/payment'
    | '/sell'
    | '/type'
    | '/user'
    | '/vendor'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | ''
    | '/login'
    | '/contract'
    | '/home'
    | '/setting'
    | '/customer/$customerId'
    | '/customer/new'
    | '/goods/$goodsId'
    | '/goods/new'
    | '/payment/new'
    | '/sell/$sellId'
    | '/sell/new'
    | '/type/$typeId'
    | '/type/new'
    | '/user/new'
    | '/vendor/$vendorId'
    | '/vendor/new'
    | '/customer'
    | '/goods'
    | '/payment'
    | '/sell'
    | '/type'
    | '/user'
    | '/vendor'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/_app'
    | '/_auth/login'
    | '/_app/contract'
    | '/_app/home'
    | '/_app/setting'
    | '/_app/customer/$customerId'
    | '/_app/customer/new'
    | '/_app/goods/$goodsId'
    | '/_app/goods/new'
    | '/_app/payment/new'
    | '/_app/sell/$sellId'
    | '/_app/sell/new'
    | '/_app/type/$typeId'
    | '/_app/type/new'
    | '/_app/user/new'
    | '/_app/vendor/$vendorId'
    | '/_app/vendor/new'
    | '/_app/customer/'
    | '/_app/goods/'
    | '/_app/payment/'
    | '/_app/sell/'
    | '/_app/type/'
    | '/_app/user/'
    | '/_app/vendor/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  AppRoute: typeof AppRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AppRoute: AppRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/404",
        "/_app",
        "/_auth/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/404": {
      "filePath": "404.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/contract",
        "/_app/home",
        "/_app/setting",
        "/_app/customer/$customerId",
        "/_app/customer/new",
        "/_app/goods/$goodsId",
        "/_app/goods/new",
        "/_app/payment/new",
        "/_app/sell/$sellId",
        "/_app/sell/new",
        "/_app/type/$typeId",
        "/_app/type/new",
        "/_app/user/new",
        "/_app/vendor/$vendorId",
        "/_app/vendor/new",
        "/_app/customer/",
        "/_app/goods/",
        "/_app/payment/",
        "/_app/sell/",
        "/_app/type/",
        "/_app/user/",
        "/_app/vendor/"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_app/contract": {
      "filePath": "_app/contract.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/home": {
      "filePath": "_app/home.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/setting": {
      "filePath": "_app/setting.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/customer/$customerId": {
      "filePath": "_app/customer/$customerId.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/customer/new": {
      "filePath": "_app/customer/new.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/goods/$goodsId": {
      "filePath": "_app/goods/$goodsId.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/goods/new": {
      "filePath": "_app/goods/new.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/payment/new": {
      "filePath": "_app/payment/new.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/sell/$sellId": {
      "filePath": "_app/sell/$sellId.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/sell/new": {
      "filePath": "_app/sell/new.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/type/$typeId": {
      "filePath": "_app/type/$typeId.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/type/new": {
      "filePath": "_app/type/new.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/user/new": {
      "filePath": "_app/user/new.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/vendor/$vendorId": {
      "filePath": "_app/vendor/$vendorId.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/vendor/new": {
      "filePath": "_app/vendor/new.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/customer/": {
      "filePath": "_app/customer/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/goods/": {
      "filePath": "_app/goods/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/payment/": {
      "filePath": "_app/payment/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/sell/": {
      "filePath": "_app/sell/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/type/": {
      "filePath": "_app/type/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/user/": {
      "filePath": "_app/user/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/vendor/": {
      "filePath": "_app/vendor/index.lazy.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
